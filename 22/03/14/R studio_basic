
# 기본연산

- 더하기, 빼기, 곱하기, 나누기, 나눗셈의 나머지(%%), 제곱(^) 가능
- 상용로그와 자연로그
  대학교에서는 자연로그를 더 많이 쓴다고 한다.
  상용로그 Log10(10) = 1
  자연로그 Log(10) = 2.302585
  log(10, base=10) =1 
  ?log 하면 설명이 나온다
- 30:50  하면 쭉 나열
- max(5,2,3) 하면 이중에 제일 큰 값 뽑아주는데 크게 의미는 없을 듯 하다
- 이외에 절댓값(abs), 팩토리얼(factorial), 삼각함수(sin, cos, tan) 이 있다


 # 변수
항상 원본 데이터는 유지하자

a<-30  하면 a에 30이 들어간다
a<-"a+b" 하면 a에 a+b 가들어간다

<변수명>
숫자로 시작할수 없다. 
-, @ 사용할 수 없다
첫 글자는 .이나 알파벳으로 시작
2번째 글자부터 영문자, 숫자, ., _ 사용가능
빈칸 사용할 수 없음

<변수의 자료형>
- 숫자형 : 정수, 실수 모두 가능
- 문자형 : 'Tom', 'Jane' 
- 논리형 : TRUE, FALSE
- 특수값 
  NULL
  NA
  NAN   (Ex sqrt(-3) 하면 NAN이라고 뜬다
  Inf, -Inf

<벡터의 이해>
숫자형 벡터 : x <- c(1,2,3) 
문자형 백터 : y <- c("a","b","c")
논리형 백터 : z <- c(TRUE,FALSE) 

우선순위 : 문자>숫자>논리
EX)
W <- c(1,2,3,TRUE,F) 하면 숫자>논리이기 때문에 1,2,3,1,2
z <- c("1", 2,3) 하면 문자> 숫자이기 때문에 "1","2","3"
v2 <- c(1,2,30:33) 하면 1,2,30,31,32,33 이렇게 나온다

# seq
v1 <- seq(시작, 끝, 간격)
# rep
 <- rep(1,5) 하면 [1] 11111
 <- rep(1:2, times=3) 하면 [1]121212
 <- rep( c(1,2,10:11), times=2) 하면 [1]1 2 10 11 1 2 10 11

# 값들에 이름도 붙일 수 있다
score <- c(100,96)
name(score) <- c("duswl", "cjfgml") 이렇게하면
duswl cjgml
100    96   이렇게 된당

# 위치찾자
d <- c(11,12,13)

d[2] 하면 12가 나온다! 파이썬은 0부터 R은 1부터
d[c(1,2)] 하면 11, 12 출력해준다
d[1:2] 해도 11, 12 출력해준다

d[seq(시작,끝,간격)] 응용가능

d[-1] 첫번째값 제외하고 출력
d[-c(1:2)] 응용가능



# 값 변경 
d[1] <- 2  첫번째값을 2로 변경
d[c(1:2)] <- c(3,5) 
이거를 <- NA 도 가능 
